pipeline {
 agent {
 docker { image 'maven' }
 }
 stages {
 stage ('Checkout') {
 steps {
 git branch:'main', url: 'https://github.com/jhyw/testing2.git'
 }
 }

 stage('Code Quality Check via SonarQube') {
 steps {
 script {
 def scannerHome = tool 'SonarQube';
 withSonarQubeEnv() {
 sh "${tool("SonarQube")}/bin/sonar-scanner \
 -Dsonar.projectKey=OWASP \
 -Dsonar.sources=. \
 -Dsonar.host.url=http://192.168.137.149:9000/ \
 -Dsonar.login=d52d88b8c1513275b6a6061eeb515b4b4c23227a"
 }
 }
 }
 }
 }
 post {
 always {
 recordIssues enabledForFailure: true, tool: sonarQube()
 }
 }
}
